@model eventful.Models.eventfulAggregateModel
@{
	ViewBag.Title = "Aggregate";
}
<script src="/Scripts/Partials/AggregateResultsTemplate.js" type="text/javascript"></script>
<div class="row">
	<div class="col-md-12">
		<h2 style="display: inline-block;">Aggregate</h2>
		<a href="/eventful/Aggregate">[Reset]</a>
	</div>
</div>
<div class="row">
	<div class="col-md-2">
		<label>
			Auto-refresh?
			<input type="checkbox" checked="checked" id="AutoRefreshCB" />
		</label>
	</div>
	<div class="col-md-10" id="LinkDiv">
	</div>
</div>
<h3>Criteria</h3>
@using (Html.BeginForm("Index", "Aggregate", FormMethod.Post, new { ID = "CriteriaForm", @class = "form-horizontal" }))
{
	<div class="row">
		<div class="col-sm-6">
			<div class="form-group">
				<label for="RequestedStartTime" class="col-sm-3 col-md-2">StartTime</label>
				<div class="col-sm-9 col-md-10">
					<div class="input-group">
						@Html.Partial("DatePickerEButton") @Html.TextBoxFor(m => m.RequestedStartTime, new { @class = "form-control ebutton" })
					</div>
				</div>
			</div>
		</div>
		<div class="col-sm-6">
			<div class="form-group">
				<label for="RequestedEndTime" class="col-sm-3 col-md-2">EndTime</label>
				<div class="col-sm-9 col-md-10">
					<div class="input-group">
						@Html.Partial("DatePickerEButton") @Html.TextBoxFor(m => m.RequestedEndTime, new { @class = "form-control ebutton" })
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-xs-12">
			<div class="form-group">
				<label for="QueryCriteria" class="col-sm-1">Criteria</label>
				<div class="col-sm-11">
					<div class="input-group eButton-top">
						@Html.Partial("FieldPickerEButton") @Html.TextAreaFor(m => m.EqlQuery, new { rows = 4, @class = "form-control ebutton" })
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-sm-6 col-md-3">
			<div class="form-group">
				<label for="GroupBy" class="col-sm-4">GroupBy</label>
				<div class="col-sm-8">
					<div class="input-group">
						@Html.Partial("FieldPickerEButton") @Html.TextBoxFor(m => m.GroupByFieldName, new { @class = "form-control ebutton" })
					</div>
				</div>
			</div>
		</div>
		<div class="col-sm-6 col-md-3">
			<div class="form-group">
				<label for="AggregateOperator" class="col-sm-4">Aggregate Operator</label>
				<div class="col-sm-8">
					@Html.TextBoxFor(m => m.AggregateOperator, new { @class = "form-control" })
				</div>
			</div>
		</div>
		<div class="col-sm-6 col-md-3">
			<div class="form-group">
				<label for="AggregateFieldName" class="col-sm-4">Aggregate Field</label>
				<div class="col-sm-8">
					@Html.TextBoxFor(m => m.AggregateFieldName, new { @class = "form-control" })
				</div>
			</div>
		</div>
		<div class="col-sm-6 col-md-3">
			<div class="form-group">
				<label for="MaxResultsBeforeOutliers" class="col-sm-4">Max Results Before Outliers</label>
				<div class="col-sm-8">
					@Html.TextBoxFor(m => m.MaxResultsBeforeOutliers, new { @class = "form-control" })
				</div>
			</div>
		</div>
	</div>
	<div class="form-group">
		<div class="col-xs-12">
			<input type="submit" class="btn btn-primary" />
			<a class="btn btn-default" id="QueryLink">Query this aggregate</a>
			<span id="KnockoutSubmitted">
			</span>
		</div>
	</div>
}
<div id="KnockoutResults" class="row">
</div>
@Html.Partial("AggregateResultsTemplate")
<script id="SubmittedQueryTemplate" type="text/html">
	<!-- Button trigger modal -->
	<a href="javascript:void(0);" data-toggle="modal" data-target="#SubmittedQueryModal">
		Geek Out!
	</a>

	<!-- Modal -->
	<div class="modal fade" id="SubmittedQueryModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
					<h4 class="modal-title" id="myModalLabel">MongoDB Query</h4>
				</div>
				<div class="modal-body">
					<p>Below are the queries that were actually sent to the MongoDB aggregation pipeline to retrieve your results.</p>
					<form class="form-horizontal">
						<div class="form-group">
							<label class="col-lg-2">Timespan</label>
							<div class="col-lg-10">
								<span data-bind="text: StartTime"></span>- <span data-bind="text: EndTime"></span>
							</div>
						</div>
						<div class="form-group">
							<label for="MatchTB" class="col-lg-2">Match</label>
							<div class="col-lg-10">
								<textarea rows="4" class="form-control" data-bind="text: Match" id="MatchTB"></textarea>
							</div>
						</div>
						<div class="form-group">
							<label for="GroupTB" class="col-lg-2">Group</label>
							<div class="col-lg-10">
								<textarea rows="4" class=" form-control" data-bind="text: Group" id="GroupTB"></textarea>
							</div>
						</div>
						<div class="form-group">
							<label for="ProjectTB" class="col-lg-2">Project</label>
							<div class="col-lg-10">
								<textarea rows="4" class=" form-control" data-bind="text: Project" id="ProjectTB"></textarea>
							</div>
						</div>
					</form>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				</div>
			</div><!-- /.modal-content -->
		</div><!-- /.modal-dialog -->
	</div><!-- /.modal -->
</script>
<script id="eventfulItemPopupTemplate" type="text/html">
	<table class="eventfulLinks table">
		<tr>
			<td><a href="javascript:void(0);" class="addToCriteriaBTN">Add to Criteria</a></td>
			<td><a href="javascript:void(0);" class="searchBTN">Search</a></td>
		</tr>
	</table>
</script>
@Html.Partial("DatePickerPopup")
@Html.Partial("FieldPickerPopup")

<script id="ResultEButtonPopupTemplate" type="text/html">
	<div class="resultEButtonPopup">
		<a href="javascript:void(0);" class="addToCriteria">Add</a> to query critiera
		<br />
		<a href="javascript:void(0);" class="drillDown">Drill down</a> on this criteria
	</div>
</script>
<script type="text/javascript">
	function buildReportLink() {
		var link = getReportHref();
		link = '<a href="' + link + '">Link to this query</a>';
		$('#LinkDiv').html(link);
	}

	function getReportHref() {
		var joined = eventful.utils.buildQueryStringFromForm('#CriteriaForm');
		var link = 'aggregate?' + joined;
		return link;
	}

	function setPageLocation() {
		var href = getReportHref();
		window.history.pushState({ location: href }, document.title, href);
	}

	function buildQueryLink() {
		var qs = eventful.utils.buildQueryStringFromForm('#CriteriaForm');
		var link = 'query?' + qs;
		$('#QueryLink').attr('href', link);
	}

	function redirectToSearchWithCurrentCriteria() {
		var criteriaQS = eventful.utils.buildQueryStringFromForm('#CriteriaForm');
		var link = 'query?' + criteriaQS;
		window.location = link;
	}

	function renderResults(response, statusText, xhr, $form) {
		$('body').removeClass('loading');
		var resultsTemplate = $('#ResultsTemplate').text();
		var submittedQueryTemplate = $('#SubmittedQueryTemplate').text();
		$('#KnockoutResults').empty().html(resultsTemplate);
		$('#KnockoutSubmitted').empty().html(submittedQueryTemplate);
		$('#KnockoutResults').show();
		eventful.partials.aggregateResultsTemplate.renderResults(response, document.getElementById('KnockoutResults'), statusText, xhr);
		ko.applyBindings(response, document.getElementById('KnockoutSubmitted'));
		buildReportLink();
		buildQueryLink();
		setPageLocation();
		$('#EqlQuery').val(response.EqlQuery);
	}

	function getEvenfulPopupHtml(templateID) {
		return $(templateID).text();
	}

	function addContextualDataToQueryCriteria($buttonClicked) {
		var facetValue = $buttonClicked.closest('div.popover').closest('tr').children('td:nth-child(2)').text();
		var newCriteria = $('#GroupBy').val() + ' == \'' + facetValue + '\'';
		eventful.utils.addToCriteriaInput(newCriteria, $('#QueryCriteria'));
	}

	function handleAddToCriteriaClick() {
		addContextualDataToQueryCriteria($(this));
		eventful.eButton.hideeventfulPopups();
	}

	function handleSearchClick() {
		addContextualDataToQueryCriteria($(this));
		redirectToSearchWithCurrentCriteria();
	}



	function autoRefreshManager() {
		var self = this;
		self.interval = null;
		self.setAutoRefreshInterval = function () {
			if (!self.interval) {
				self.interval = window.setInterval(function () { self.handleAutoRefreshInterval() }, 1000 * 60 * 5);
			}
		}

		self.clearAutoRefreshInterval = function () {
			if (self.interval) {
				window.clearInterval(self.interval);
				interval = null;
			}
		}

		self.handleAutoRefreshInterval = function () {
			var $cb = $('#AutoRefreshCB:checked');
			if ($cb.length > 0) {
				$('#CriteriaForm input[type=submit]').click();
			} else {
				self.clearAutoRefreshInterval();
			}
		}
	}


	$(document).ready(function () {
		$('#KnockoutResults').hide();
		eventful.utils.loadQuerystringValues('#CriteriaForm');
		buildReportLink();
		$('#CriteriaForm').ajaxForm({
			success: renderResults,
			beforeSubmit: function () { $('body').addClass('loading'); }
		});
		$('#CriteriaForm input[type=submit]').click();

		var autoRefresh = new autoRefreshManager();
		autoRefresh.setAutoRefreshInterval();
		$('body').on('click', '#AutoRefreshCB', function () {
			var $this = $(this);
			var checked = $this.has(':checked');
			if (checked) {
				autoRefresh.setAutoRefreshInterval();
			} else {
				autoRefresh.clearAutoRefreshInterval();
			}
		});

		$('#KnockoutResults').popover({
			selector: '.resultsTable button.eButton',
			html: true,
			title: '{e}ventful',
			content: $('#ResultEButtonPopupTemplate').text()
		});

		var addToCriteria = function ($clicked) {
			var criteriaName = $('#GroupedBySpan').text();
			var criteriaValue = $clicked.parents('td').siblings('td:first').text();
			var criteria = eventful.partials.aggregateResultsTemplate.formatCriteriaToAddToQuery(criteriaName, criteriaValue);
			//var criteria = criteriaName + ' == ' + criteriaValue;
			eventful.utils.addToCriteriaInput(criteria, $('#EqlQuery'));
		};

		$('body').on('click', 'div.resultEButtonPopup a.addToCriteria', function () {
			var $this = $(this);
			addToCriteria($this);
			$this.parents('.popover').siblings('button.eButton').popover('toggle');
			window.scrollTo(0, 0);
		});

		$('body').on('click', 'div.resultEButtonPopup a.drillDown', function () {
			var $this = $(this);
			addToCriteria($this);
			var qs = eventful.utils.buildQueryStringFromForm('#CriteriaForm');
			window.location = 'query?' + qs;
		});

		window.onpopstate = function (event) {
			if (event.state && event.state.location) {
				document.location = event.state.location;
			}
		}
	});
</script>

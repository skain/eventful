@{
	ViewBag.Title = "Create Klaxon";
}

<h2>Create a Klaxon</h2>

<form action="/api/klaxon/create" method="post" id="CreateForm">
	<div class="row">
		<div class="col-lg-6">
			<div class="form-group">
				<label for="Name">Name</label>
				<input class="form-control" id="Name" name="Name" type="text" value="Test" />
			</div>

			<div class="form-group">
				<label for="EqlQuery">EqlQuery</label>
				<textarea class="form-control" cols="20" id="EqlQuery" name="EqlQuery" rows="4">LogLevel == Error</textarea>
			</div>

			<div class="form-group">
				<label for="ComparisonOperator">ComparisonOperator</label>
				<input class="form-control" id="ComparisonOperator" name="ComparisonOperator" type="text" value=">" />
			</div>

			<div class="form-group">
				<label for="ComparisonThreshold">ComparisonThreshold</label>
				<input class="form-control" data-val="true" data-val-number="The field ComparisonThreshold must be a number." data-val-required="The ComparisonThreshold field is required." id="ComparisonThreshold" name="ComparisonThreshold" type="text" value="10" />
			</div>

			<div class="form-group">
				<label for="CheckEvery">CheckEvery</label>
				<input class="form-control" id="CheckEvery" name="CheckEvery" type="text" value="15 minutes" />
			</div>
			<div class="form-group">
				<label for="AggregateOperation">AggregateOperation</label>
				<input class="form-control" id="AggregateOperation" name="AggregateOperation" type="text" value="Count" />
			</div>
			<div class="form-group">
				<label for="FieldToAggregate">FieldToAggregate</label>
				<input class="form-control" id="FieldToAggregate" name="FieldToAggregate" type="text" value="_id" />
			</div>
			<div class="form-group">
				<label for="StartTime">StartTime</label>
				<input class="form-control" id="StartTime" name="StartTime" type="text" value="Now - 15 minutes" />
			</div>
			<div class="form-group">
				<label for="EndTime">EndTime</label>
				<input class="form-control" id="EndTime" name="EndTime" type="text" value="Now" />
			</div>
			<div class="form-group">
				<button type="submit" class="btn btn-primary">Create</button>
				<button type="button" class="btn btn-default">Test</button>
				<input data-val="true" data-val-date="The field NextCheckAt must be a date." data-val-required="The NextCheckAt field is required." id="NextCheckAt" name="NextCheckAt" type="hidden" value="1/1/1970 12:00:00 AM" />
				<input data-val="true" data-val-date="The field LastCheckedAt must be a date." data-val-required="The LastCheckedAt field is required." id="LastCheckedAt" name="LastCheckedAt" type="hidden" value="1/1/1970 12:00:00 AM" />
			</div>
		</div>
		<div class="col-lg-6">
			<p>
				A Klaxon is a scheduled check that sends out emails to subscribers when the result of a specified query returns a value that meets a specified threshold.
			</p>
			<h4>Name</h4>
			<p>Give the Klaxon a name that is unique and human understandable.</p>
			<h4>Eql Query</h4>
			<p>This is the query that will be used as the 'match' query for the aggregate operation. In other words the specified aggregation will be performed on the results of this query.</p>
			<h4>Comparison Operator</h4>
			<p>The result of the aggregate operation will be compared with the Comparison Threshold using this operator. Valid values are <code>==, !=, >=, <=, >, <</code></p>
			<h4>Comparison Threshold</h4>
			<p>The result of the aggregate operation will be compared with this value using the specified Comparison Operator. This value should be a number.</p>
			<h4>Check Every</h4>
			<p>An {e}ventful timespan specifying how often this check should be performed. Note that values under five minutes will probably not be executed reliably on schedule. Example values: <code>15 Minutes, 1 Hour, 3 Days</code></p>
			<h4>Aggregate Operation</h4>
			<p>The aggregate operation to perform. Valid values are <code>Count, Sum, Avg, First, Last, Max, Min</code></p>
			<h4>Field To Aggregate</h4>
			<p>The field to perform the specified aggregate operation on. For simple counts just use '_id'.</p>
		</div>
	</div>
</form>

<div>
	@Html.ActionLink("Back to List", "Index")
</div>
<div id="ModalHolder">
</div>
<script id="ModalTemplate" type="text/html">
	<!-- Modal -->
	<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
					<h4 class="modal-title">Modal title</h4>
				</div>
				<div class="modal-body">
					Aggregate Result: <span data-bind="text: NumMatched"></span>
					<br />
					Comparison Operator: <span data-bind="text: ComparisonOperator"></span>
					<br />
					Comparison Threshold: <span data-bind="text: ComparisonThreshold"></span>
					<br />
					Threshold Test Result: <span data-bind="text: TestResult"></span>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-primary" data-dismiss="modal">OK</button>
				</div>
			</div>
			<!-- /.modal-content -->
		</div>
		<!-- /.modal-dialog -->
	</div>
	<!-- /.modal -->
</script>
<script src="~/Scripts/jquery.form.js" type="text/javascript"></script>
<script>
	$(document).ready(function () {
		function renderResults(responseText, statusText, xhr, $form) {
			$('body').removeClass('loading');
			var $modalHolder = $('#ModalHolder');
			$modalHolder.html($('#ModalTemplate').text());
			var $modalDiv = $('div.modal', $modalHolder);
			ko.applyBindings(responseText, $modalDiv[0]);
			console.log(responseText);
			$modalDiv.modal();
		}

		function performTest() {
			$('form').ajaxSubmit({
				url: 'Klaxon/test',
				beforeSubmit: function () { $('body').addClass('loading'); },
				success: renderResults
			});
		}

		$('#CreateForm').ajaxForm({
			success: function () {
				alert('Klaxon Created.');
				document.location = '/klaxon';
			},
			error: function (request, status, error) {
				$('body').removeClass('loading');
				eventful.errorAlert.showAlert(request.ResponseText || error || "Error message unavailable");
			},
			beforeSubmit: function () { $('body').addClass('loading'); }
		});
		$('body').on('click', '.btn-default', function () {
			performTest();
		});
	});
</script>
